#include <bits/stdc++.h>
#define rep(i, a, b) for(typeof(b) i = a; i < b; i++)
using namespace std;
typedef pair<int, int> ii;
typedef tuple<int, int, int, int, int> iiii;
typedef pair<pair<int, int>, int> iii;
typedef long long ll;
typedef vector<int> vi;
typedef vector<ii> vii;
typedef pair<ll, ii> shape_;
int INF = ~(1 << 31);
#define fs first
#define sc second
#define _x first
#define _y second

// shapes:
//       #  #     #  
//  ###  #  #    ##  ##  ##    ##   #  #   #
//   #   #  #    #   #   ##    #   ##  #   #
//   #   #  ###  #   ##  ###  ##   #   ##  ###


shape_ shapes [10][2][4] = {
    {
        {   
           {(0b0000001 << 14) +
            (0b0000111 << 7) +
            (0b0000001), {3, 3}},
            
           {(0b0000010 << 14) +
            (0b0000010 << 7) +
            (0b0000111), {3, 3}},
            
           {(0b0000100 << 14) +
            (0b0000111 << 7) +
            (0b0000100), {3, 3}},
            
           {(0b0000111 << 14) +
            (0b0000010 << 7) +
            (0b0000010), {3, 3}}
        },
        {
            {0,{0,0}},
            {0,{0,0}},
            {0,{0,0}},
            {0,{0,0}}
        }
    },
    {
        {
           {(0b0000001 << 21) +
            (0b0000001 << 14) +
            (0b0000001 << 7) +
            (0b0000001), {1, 4}},

           {(0b0000000 << 14) +
            (0b0000000 << 7) +
            (0b0001111), {4, 1}},
            {0,{0,0}},
            {0,{0,0}}
        },
        {
            {0,{0,0}},
            {0,{0,0}},
            {0,{0,0}},
            {0,{0,0}}
        }
    },
    {
        {
           {(0b0000001 << 21) +
            (0b0000001 << 14) +
            (0b0000001 << 7) +
            (0b0000011), {2, 4}},

           {(0b0001111 << 7) +
            (0b0000001), {4, 2}},
           
           {(0b0000011 << 21) +
            (0b0000010 << 14) +
            (0b0000010 << 7) +
            (0b0000010), {2, 4}},
           
           {(0b0001000 << 7) +
            (0b0001111), {4, 2}}
        },
        {
           {(0b0000011 << 21) +
            (0b0000001 << 14) +
            (0b0000001 << 7) +
            (0b0000001), {2, 4}},

           {(0b0001111 << 7) +
            (0b0001000), {4, 2}},
           
           {(0b0000010 << 21) +
            (0b0000010 << 14) +
            (0b0000010 << 7) +
            (0b0000011), {2, 4}},
           
           {(0b0000001 << 7) +
            (0b0001111), {4, 2}}
        }
    },
    {
        {
           {(0b0000001 << 21) +
            (0b0000001 << 14) +
            (0b0000011 << 7) +
            (0b0000010), {2, 4}},

           {(0b0001110 << 7) +
            (0b0000011), {4, 2}},
           
           {(0b0000001 << 21) +
            (0b0000011 << 14) +
            (0b0000010 << 7) +
            (0b0000010), {2, 4}},
           
           {(0b0000011 << 7) +
            (0b0001110), {4, 2}}
        },
        {
           {(0b0000010 << 21) +
            (0b0000011 << 14) +
            (0b0000001 << 7) +
            (0b0000001), {2, 4}},

           {(0b0000111 << 7) +
            (0b0001100), {4, 2}},
           
           {(0b0000010 << 21) +
            (0b0000010 << 14) +
            (0b0000011 << 7) +
            (0b0000001), {2, 4}},
           
           {(0b0001100 << 7) +
            (0b0000111), {4, 2}}
        }
    },
    {
        {
           {(0b0000011 << 14) +
            (0b0000001 << 7) +
            (0b0000011), {2, 3}},

           {(0b0000101 << 7) +
            (0b0000111), {3, 2}},
           
           {(0b0000011 << 14) +
            (0b0000010 << 7) +
            (0b0000011), {2, 3}},
           
           {(0b0000111 << 7) +
            (0b0000101), {3, 2}}
        },
        {
            {0,{0,0}},
            {0,{0,0}},
            {0,{0,0}},
            {0,{0,0}}
        }
    },
    {
        {
           {(0b0000011 << 14) +
            (0b0000011 << 7) +
            (0b0000001), {2, 3}},

           {(0b0000011 << 7) +
            (0b0000111), {3, 2}},
           
           {(0b0000010 << 14) +
            (0b0000011 << 7) +
            (0b0000011), {2, 3}},
           
           {(0b0000111 << 7) +
            (0b0000110), {3, 2}}
        },
        {
           {(0b0000001 << 14) +
            (0b0000011 << 7) +
            (0b0000011), {2, 3}},

           {(0b0000110 << 7) +
            (0b0000111), {3, 2}},
           
           {(0b0000011 << 14) +
            (0b0000011 << 7) +
            (0b0000010), {2, 3}},
           
           {(0b0000111 << 7) +
            (0b0000011), {3, 2}}
        }
    },
    {
        {
           {(0b0000110 << 14) +
            (0b0000010 << 7) +
            (0b0000011), {3, 3}},

           {(0b0000001 << 14) +
            (0b0000111 << 7) +
            (0b0000100), {3, 3}},
            {0,{0,0}},
            {0,{0,0}}
        },
        {
           {(0b0000011 << 14) +
            (0b0000010 << 7) +
            (0b0000110), {3, 3}},

           {(0b0000100 << 14) +
            (0b0000111 << 7) +
            (0b0000001), {3, 3}},
            {0,{0,0}},
            {0,{0,0}}
        }
    },
    {
        {
           {(0b0000001 << 14) +
            (0b0000011 << 7) +
            (0b0000010), {2, 3}},

           {(0b0000110 << 7) +
            (0b0000011), {3, 2}},
           
           {(0b0000001 << 14) +
            (0b0000011 << 7) +
            (0b0000010), {2, 3}},
           
           {(0b0000110 << 7) +
            (0b0000011), {3, 2}}
        },
        {
           {(0b0000010 << 14) +
            (0b0000011 << 7) +
            (0b0000001), {2, 3}},

           {(0b0000011 << 7) +
            (0b0000110), {3, 2}},
           
           {(0b0000010 << 14) +
            (0b0000011 << 7) +
            (0b0000001), {2, 3}},
           
           {(0b0000011 << 7) +
            (0b0000110), {3, 2}}
        }
    },
    {
        {
           {(0b0000001 << 14) +
            (0b0000001 << 7) +
            (0b0000011), {2, 3}},

           {(0b0000111 << 7) +
            (0b0000001), {3, 2}},
           
           {(0b0000011 << 14) +
            (0b0000010 << 7) +
            (0b0000010), {2, 3}},
           
           {(0b0000100 << 7) +
            (0b0000111), {3, 2}}
        },
        {
           {(0b0000011 << 14) +
            (0b0000001 << 7) +
            (0b0000001), {2, 3}},

           {(0b0000111 << 7) +
            (0b0000100), {3, 2}},
           
           {(0b0000010 << 14) +
            (0b0000010 << 7) +
            (0b0000011), {2, 3}},
           
           {(0b0000001 << 7) +
            (0b0000111), {3, 2}}
        }
    },
    {
        {
           {(0b0000001 << 14) +
            (0b0000001 << 7) +
            (0b0000111), {3, 3}},

           {(0b0000111 << 14) +
            (0b0000001 << 7) +
            (0b0000001), {3, 3}},
           
           {(0b0000111 << 14) +
            (0b0000100 << 7) +
            (0b0000100), {3, 3}},
           
           {(0b0000100 << 14) +
            (0b0000100 << 7) +
            (0b0000111), {3, 3}}
        },
        {
            
            {0,{0,0}},
            {0,{0,0}},
            {0,{0,0}},
            {0,{0,0}}
        }
    }
};




ll res = 1;
ll res2 = 1;

string map_[8][7] = {
    {"JA", "FE", "MA", "AP", "MA", "JN", "##"},
    {"JL", "AU", "SE", "OC", "NO", "DE", "##"},
    {"01", "02", "03", "04", "05", "06", "07"},
    {"08", "09", "10", "11", "12", "13", "14"},
    {"15", "16", "17", "18", "19", "20", "21"},
    {"22", "23", "24", "25", "26", "27", "28"},
    {"29", "30", "31", "SU", "MO", "TE", "WE"},
    {"##", "##", "##", "##", "TR", "FR", "SA"}
};

bool map__[8][7] = {
    {0, 0, 0, 0, 0, 0, 0},
    {0, 0, 0, 0, 0, 0, 0},
    {0, 0, 0, 0, 0, 0, 0},
    {0, 0, 0, 0, 0, 0, 0},
    {0, 0, 0, 0, 0, 0, 0},
    {0, 0, 0, 0, 0, 0, 0},
    {0, 0, 0, 0, 0, 0, 0},
    {0, 0, 0, 0, 0, 0, 0}
};

int main(){
    
    
    ll a;
    cin >> a;
    for(int i = 5; i < 10; i++){
        int b = a % 10;
        int d = b % 4;
        b /= 4;
        a /= 10;
        int y = a %10;
        a /= 10;
        int x = a %10;
        a /= 10;
        
        shape_ dir = shapes[9 - i][b][d];
        // cout << i << " " << b << " " << d << " " << x << " " << y << endl;
        
        
        ll new_ = dir.first << y;
        new_ = new_ << x * 7;
        ll mask = 1LL;
        rep(new_x, 0, 8){
            rep(new_y, 0, 7){
                // cout << mask << " " << (new_ & mask) << endl;
                if((mask & new_) != 0){
                    map_[new_x][new_y] = "0" + to_string(9 - i);
                    map__[new_x][new_y] = 1;
                }
                mask *= 2;
            }
        }
    }
    cin >> a;
    for(int i = 0; i < 5; i++){
        int b = a % 10;
        int d = b % 4;
        b /= 4;
        a /= 10;
        int y = a %10;
        a /= 10;
        int x = a %10;
        a /= 10;
        
        shape_ dir = shapes[9 - i][b][d];
        // cout << i << " " << b << " " << d << " " << x << " " << y << endl;
        
        ll new_ = dir.first << y;
        new_ = new_ << x * 7;
        ll mask = 1LL;
        rep(new_x, 0, 8){
            rep(new_y, 0, 7){
                // cout << mask << " " << (new_ & mask) << endl;
                if((mask & new_) != 0){
                    map_[new_x][new_y] = "0" + to_string(9 - i);
                    map__[new_x][new_y] = 1;
                }
                mask *= 2;
            }
        }
    }
    rep(x, 0, 8){
        cout << endl << "|";
        rep(y, 0, 7){
            if(!map__[x][y]){
                cout << map_[x][y] << "|";
            }else{
                if(x == 7 || map_[x][y] != map_[x + 1][y]){
                    cout << "__";
                }else{
                    cout << "  "; //map_[x][y];
                }
                if(y == 6 || map_[x][y] != map_[x][y + 1]){
                    cout << "|";
                }else{
                    cout << " ";
                }
            }
        }
    }
}